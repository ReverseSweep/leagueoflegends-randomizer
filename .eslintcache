[{"C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\index.js":"1","C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\reportWebVitals.js":"2","C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\App.js":"3","C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\components\\Form.js":"4","C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\components\\Player.js":"5"},{"size":500,"mtime":1609866662786,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609596281168,"results":"8","hashOfConfig":"7"},{"size":4641,"mtime":1609866909511,"results":"9","hashOfConfig":"7"},{"size":736,"mtime":1609862496145,"results":"10","hashOfConfig":"7"},{"size":1079,"mtime":1609866785653,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16xzsuc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\index.js",[],"C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\reportWebVitals.js",[],["24","25"],"C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\App.js",["26","27","28","29","30","31","32","33","34","35","36","37","38"],"import './App.css';\nimport Form from \"./components/Form\";\nimport Player from \"./components/Player\";\nimport React, { useState } from 'react';\n\nconst ROLESMAPPING = {0: \"Support\", 1: \"Top\", 2: \"Mid\", 3: \"ADC\", 4:\"Jungle\"};\nconst MAXPLAYERS = 10;\nconst PLAYERSPERTEAM =5;\n\nfunction App(props) {\n  const [players, setPlayers] = useState([]);\n\n  function addPlayer(playerName) {\n\n    if (players.length == MAXPLAYERS) {\n      alert(\"there are too many players\");\n    }\n    else if (playerAlreadyExist(playerName)) {\n      alert(\"player already exists\");\n    } else {\n      const newPlayer = { name: playerName, role: null, team: null};\n      setPlayers([...players, newPlayer]);\n    }\n  }\n\n  function removePlayer(playerName) {\n    var newPlayersList = players.filter((player) => player.name != playerName);\n    setPlayers([...newPlayersList]);\n  }\n\n  function playerAlreadyExist(playerName){\n    var i;\n    for (i=0; i < players.length; i++) {\n      if (playerName == players[i].name){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function switchTeams(playerName) {\n    var newPlayersList = players.map(player =>{\n      if (player.name == playerName) {\n        if (player.team == \"Left\") {\n          player.team = \"Right\";\n        } else {\n          player.team = \"Left\"\n        }\n        player.role = null;\n        return player;\n      } else {\n        return player;\n      }\n    });\n    setPlayers(newPlayersList);\n  }\n\n  function assignTeam(playerName, newTeam) {\n    var newPlayersList = players.map(player =>{\n      if (player.name == playerName) {\n        player.team = newTeam;\n        player.role = null;\n        return player;\n      } else {\n        return player;\n      }\n    });\n    setPlayers(newPlayersList);\n  }\n\n  function randomizeTeams(playerList) {\n\n    if (playerList.length < MAXPLAYERS) {\n      alert(\"there are not enough players\");\n      return;\n    }\n\n    scuffleHelper(playerList);\n\n    if (playerList.length == 10) {\n      var j;\n      for (j = 0; j < PLAYERSPERTEAM; j++) {\n        playerList[j].team = \"Left\";\n      }\n\n      for (j = PLAYERSPERTEAM; j < MAXPLAYERS; j++) {\n        playerList[j].team = \"Right\";\n      }\n    }\n    setPlayers([...playerList]);\n  }\n\n  function scuffleHelper(listToScuffle) {\n    var m = listToScuffle.length, t, i;\n\n    while (m) {\n      i = Math.floor(Math.random() * m --);\n\n      t = listToScuffle[m];\n      listToScuffle[m] = listToScuffle[i];\n      listToScuffle[i] = t;\n    }\n    return listToScuffle;\n  }\n\n  function randomizeRoles(leftTeam, rightTeam) {\n    if (leftTeam.length != PLAYERSPERTEAM || rightTeam.length != PLAYERSPERTEAM){\n      alert(\"teams need to be 5 person each\");\n      return;\n    }\n\n    randomizeRolesHelper(leftTeam);\n    randomizeRolesHelper(rightTeam);\n    setPlayers(leftTeam.concat(rightTeam));\n  }\n\n  function randomizeRolesHelper(team) {\n    var roles = [...Array(PLAYERSPERTEAM).keys()];\n    scuffleHelper(roles)\n\n    var i;\n    for (i=0; i < team.length; i ++) {\n      team[i].role = ROLESMAPPING[roles[i]];\n    }\n  }\n\n  var unassignedPlayers = players\n  .filter((player) => player.team == null)\n  .map(player => (\n    <Player\n      key={player.name}\n      name={player.name}\n      removePlayer={removePlayer}\n      assignTeam={assignTeam}\n      />\n  ));\n\n  var leftTeam = players\n  .filter((player) => player.team == \"Left\")\n  .map(player => (\n    <Player\n      key={player.name}\n      name={player.name}\n      role={player.role}\n      team={player.team}\n      removePlayer={removePlayer}\n      switchTeams={switchTeams}\n      />\n  ));\n  \n\n  var rightTeam = players\n  .filter((player) => player.team == \"Right\")\n  .map(player => (\n    <Player\n      key={player.name}\n      name={player.name}\n      role={player.role}\n      team={player.team}\n      removePlayer={removePlayer}\n      switchTeams={switchTeams}\n      />\n  ));\n\n  return (\n    <div className=\"App\">\n\n      <Form addPlayer={addPlayer}/>\n    <p>Unassigned Players:</p>\n\n    {unassignedPlayers}\n\n    <p>Actions:</p>\n\n    <button\n      type=\"button\"\n      onClick ={() => {\n        randomizeTeams(players);\n      }}>\n      Randomize Teams\n    </button>\n\n    <button\n      type=\"button\"\n      onClick ={() => {\n        randomizeRoles(players.filter((player) => player.team == \"Right\"), players.filter((player) => player.team == \"Left\"));\n      }}>\n      Randomize Roles \n    </button>\n\n    <div className=\"teams-list\">\n      <div>\n      <b>Team 1</b>\n      <ul>{leftTeam}</ul>\n      </div>\n      \n      &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n      <div>\n      <b>Team 2</b>\n      <ul>{rightTeam}</ul>\n      </div>\n      \n    </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\components\\Form.js",[],"C:\\Users\\derek\\Desktop\\inhouseWebsite\\inhouse-website\\src\\components\\Player.js",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":15,"column":24,"nodeType":"46","messageId":"47","endLine":15,"endColumn":26},{"ruleId":"44","severity":1,"message":"48","line":27,"column":65,"nodeType":"46","messageId":"47","endLine":27,"endColumn":67},{"ruleId":"44","severity":1,"message":"45","line":34,"column":22,"nodeType":"46","messageId":"47","endLine":34,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":43,"column":23,"nodeType":"46","messageId":"47","endLine":43,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":44,"column":25,"nodeType":"46","messageId":"47","endLine":44,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":60,"column":23,"nodeType":"46","messageId":"47","endLine":60,"endColumn":25},{"ruleId":"44","severity":1,"message":"45","line":80,"column":27,"nodeType":"46","messageId":"47","endLine":80,"endColumn":29},{"ruleId":"44","severity":1,"message":"48","line":107,"column":25,"nodeType":"46","messageId":"47","endLine":107,"endColumn":27},{"ruleId":"44","severity":1,"message":"48","line":107,"column":63,"nodeType":"46","messageId":"47","endLine":107,"endColumn":65},{"ruleId":"44","severity":1,"message":"45","line":139,"column":35,"nodeType":"46","messageId":"47","endLine":139,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":153,"column":35,"nodeType":"46","messageId":"47","endLine":153,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":186,"column":63,"nodeType":"46","messageId":"47","endLine":186,"endColumn":65},{"ruleId":"44","severity":1,"message":"45","line":186,"column":115,"nodeType":"46","messageId":"47","endLine":186,"endColumn":117},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]